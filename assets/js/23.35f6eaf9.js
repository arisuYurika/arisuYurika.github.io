(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{439:function(a,t,s){"use strict";s.r(t);var e=s(2),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("前端服务框架总结：")]),a._v(" "),t("h3",{attrs:{id:"一、next-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、next-js"}},[a._v("#")]),a._v(" 一、Next.js")]),a._v(" "),t("p",[a._v("React前端应用开发框架。\n重心在 Web 部分，对 UI 呈现部分的代码的组织方式、服务器端渲染功能等提供了完善的支持。")]),a._v(" "),t("h4",{attrs:{id:"页面路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面路由"}},[a._v("#")]),a._v(" 页面路由")]),a._v(" "),t("p",[a._v("文件即路由，默认以pages文件夹为入口，生成对应的路由结构。\npages文件夹内所有文件都会被当作路由入口文件，支持多层级，会根据层级生成路由地址。index文件名会被忽略:"),t("code",[a._v("/pages/user/index.js")]),a._v("对应的访问地址是"),t("code",[a._v("user")]),a._v("。")]),a._v(" "),t("p",[a._v("[api路由:API路由通常是指在客户端与服务器之间进行交互时使用的一组规则或约定。例如定义不同HTTP方法（如GET、POST等）应该执行什么操作，以及针对不同URL路径应该调用哪些服务器端函数等方面的规则。]")]),a._v(" "),t("h4",{attrs:{id:"api路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api路由"}},[a._v("#")]),a._v(" api路由")]),a._v(" "),t("p",[a._v("9.x版本后支持api路由，在"),t("code",[a._v("pages/api/")]),a._v("文件夹下的文件会作为api生效，而不会进入react前端路由中，命名规则相同，"),t("code",[a._v("pages/api/article/[id],js")]),a._v(" => "),t("code",[a._v("/api/article/123")]),a._v("。")]),a._v(" "),t("h4",{attrs:{id:"动态路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态路由"}},[a._v("#")]),a._v(" 动态路由")]),a._v(" "),t("p",[a._v("使用中括号命名："),t("code",[a._v("/pages/article/[id].js")]),a._v(" => "),t("code",[a._v("pages/article/123")])]),a._v(" "),t("h4",{attrs:{id:"路由加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由加载"}},[a._v("#")]),a._v(" 路由加载")]),a._v(" "),t("p",[a._v("提供link型组件"),t("Link"),a._v("。\n当使用这个组件替代 "),t("a"),a._v(" 标签进行路由跳转时，组件会检测链接是否命中路由，如果命中，则组件出现在视口后会触发对对应路由的 js 等资源的加载，并且点击跳转时使用路由跳转，不会重新加载页面，也不需要再等待获取渲染所需 js 等资源文件。")],1),a._v(" "),t("h4",{attrs:{id:"出错兜底"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#出错兜底"}},[a._v("#")]),a._v(" 出错兜底")]),a._v(" "),t("p",[a._v("提供了错误码响应的兜底跳转。")]),a._v(" "),t("p",[a._v("pages 文件夹下定义 http 错误码命名的页面路由。")]),a._v(" "),t("p",[a._v("当其他路由发生响应错误时，就会跳转到到错误码路由页面。")]),a._v(" "),t("h5",{attrs:{id:"的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#的"}},[a._v("#")]),a._v(" 的")]),a._v(" "),t("h3",{attrs:{id:"二、nuxt-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、nuxt-js"}},[a._v("#")]),a._v(" 二、Nuxt.js")]),a._v(" "),t("p",[a._v("Vue前端应用开发框架。\n重心在 Web 部分，对 UI 呈现部分的代码的组织方式、服务器端渲染功能等提供了完善的支持。")]),a._v(" "),t("h4",{attrs:{id:"页面路由-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面路由-2"}},[a._v("#")]),a._v(" 页面路由")]),a._v(" "),t("p",[a._v("与Next相同，只是vue有官方自己的路由实现方式vue-router，因此在编译时会生成vue-router结构的路由配置。")]),a._v(" "),t("p",[a._v("与某个路由文件同名的文件夹下的文件会变成子路由，如:")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("- article.js\n- article\n    - a.js\n    - b.js\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("a和b是article的子路由，可配合"),t("code",[a._v("<nuxt-child />")]),a._v("组件进行子路由渲染。")]),a._v(" "),t("h4",{attrs:{id:"api路由-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api路由-2"}},[a._v("#")]),a._v(" api路由")]),a._v(" "),t("p",[a._v("官方未提供支持，但是有其他实现途径，如使用框架的 serverMiddleware 能力。")]),a._v(" "),t("h4",{attrs:{id:"动态路由-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态路由-2"}},[a._v("#")]),a._v(" 动态路由")]),a._v(" "),t("NuxtLink"),a._v(" "),t("h4",{attrs:{id:"路由加载-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由加载-2"}},[a._v("#")]),a._v(" 路由加载")]),a._v(" "),t("h4",{attrs:{id:"出错兜底-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#出错兜底-2"}},[a._v("#")]),a._v(" 出错兜底")]),a._v(" "),t("h3",{attrs:{id:"三、nest-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、nest-js"}},[a._v("#")]),a._v(" 三、Nest.js")]),a._v(" "),t("p",[a._v("是“Angular 的服务端实现”，基于装饰器。")]),a._v(" "),t("h3",{attrs:{id:"四、fastify"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、fastify"}},[a._v("#")]),a._v(" 四、Fastify")]),a._v(" "),t("p",[a._v("一个使用插件模式组织代码且支持并基于 schema 做了运行效率提升的比较纯粹的偏底层的 web 框架。")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);