(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{433:function(t,i,h){"use strict";h.r(i);var a=h(2),e=Object(a.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p"),i("div",{staticClass:"table-of-contents"},[i("ul",[i("li",[i("a",{attrs:{href:"#什么元素可以设置-width-和-height-属性"}},[t._v("什么元素可以设置 width 和 height 属性？")])]),i("li",[i("a",{attrs:{href:"#width-height-可以是具体数值"}},[t._v("width height 可以是具体数值")])]),i("li",[i("a",{attrs:{href:"#width默认值是auto、height默认是auto"}},[t._v("width默认值是auto、height默认是auto")])]),i("li",[i("a",{attrs:{href:"#width-可以是-fill"}},[t._v("width 可以是 fill")])]),i("li",[i("a",{attrs:{href:"#width-可以是-max-content"}},[t._v("width 可以是 max-content")])]),i("li",[i("a",{attrs:{href:"#width-可以是-min-content"}},[t._v("width 可以是 min-content")])]),i("li",[i("a",{attrs:{href:"#width-可以是-fit-content"}},[t._v("width 可以是 fit-content")])]),i("li",[i("a",{attrs:{href:"#width-height-可以是百分比"}},[t._v("width height 可以是百分比")])]),i("li",[i("a",{attrs:{href:"#box-sizing-对-width-height-的影响"}},[t._v("box-sizing 对 width height 的影响")])]),i("li",[i("a",{attrs:{href:"#当max-width和min-width遇到width"}},[t._v("当max-width和min-width遇到width")])])])]),i("p"),t._v(" "),i("h2",{attrs:{id:"什么元素可以设置-width-和-height-属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#什么元素可以设置-width-和-height-属性"}},[t._v("#")]),t._v(" 什么元素可以设置 width 和 height 属性？")]),t._v(" "),i("p",[t._v("这是跟display属性有关的。")]),t._v(" "),i("ul",[i("li",[t._v("无效情况： display 设置为 inline 时，width height 无效，因为行内元素无法设置宽高。")]),t._v(" "),i("li",[t._v("有效情况： display 设置为 block 、 inline-block 、 inline-flex 、 flex 时， 设置 width height 有效。")])]),t._v(" "),i("h2",{attrs:{id:"width-height-可以是具体数值"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-height-可以是具体数值"}},[t._v("#")]),t._v(" width height 可以是具体数值")]),t._v(" "),i("ul",[i("li",[t._v("具体写法： 主要包括 px em 等")]),t._v(" "),i("li",[t._v("高级写法： 100vw、100vh，分别表示当前窗口宽度 100% 和当前窗口高度 100%，窗口动态改变大小时， vw 和 vh 也会改变，这在响应式设计中很常用(⊙ᗜ⊙)。")]),t._v(" "),i("li",[t._v("函数写法：calc函数 "),i("code",[t._v("calc(expression)")]),t._v(" ，expression是一个数学表达式。例如 "),i("code",[t._v("height: calc(100vh - 32px)")]),t._v(' ，可用于计算固定头部导航栏时，下部视窗的高度。任何长度值都可以使用calc()函数进行计算，它支持 "+", "-", "*", "/"，使用标准的数学运算优先级原则。')])]),t._v(" "),i("h2",{attrs:{id:"width默认值是auto、height默认是auto"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width默认值是auto、height默认是auto"}},[t._v("#")]),t._v(" width默认值是auto、height默认是auto")]),t._v(" "),i("p",[t._v("width默认值是auto、height默认是auto。")]),t._v(" "),i("p",[i("code",[t._v("height")]),t._v(" 是 auto 时，它的高度由子元素决定，子元素多高，它就多高，没有子元素时为 "),i("code",[t._v("0")]),t._v(" 。")]),t._v(" "),i("p",[i("code",[t._v("width")]),t._v(" 的表现基于 display 有不同的情况：")]),t._v(" "),i("ol",[i("li",[t._v("display 是 block 时，width 是 auto 相当于 fill。像是html、body、div，这些默认都会撑满屏幕，达到 100vw 的效果。")]),t._v(" "),i("li",[t._v("display 是 inline-block 时，width 是 auto 相当于"),i("code",[t._v("fit-content")]),t._v("。")])]),t._v(" "),i("h2",{attrs:{id:"width-可以是-fill"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-可以是-fill"}},[t._v("#")]),t._v(" width 可以是 fill")]),t._v(" "),i("p",[t._v("width 是 fill 时，它会尽可能地宽，直到撑满父元素，如果是最外层的元素，会撑到100vw 。")]),t._v(" "),i("h2",{attrs:{id:"width-可以是-max-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-可以是-max-content"}},[t._v("#")]),t._v(" width 可以是 max-content")]),t._v(" "),i("p",[t._v("当width是max-content时，它的宽度由子元素决定。子元素多宽，它就多宽（即子元素会尽可能宽，意思是："),i("code",[t._v("子元素若能不换行就不换行")]),t._v("）。没有子元素，那么宽度就是 "),i("code",[t._v("0")]),t._v("。")]),t._v(" "),i("p",[t._v("如果子元素是一段文字，这段文字就不会换行，除非直接限制了子元素的宽度（此时即使限制"),i("code",[t._v("max-content")]),t._v("元素的父元素的宽度，也拦不住子元素前进的步伐）。")]),t._v(" "),i("h2",{attrs:{id:"width-可以是-min-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-可以是-min-content"}},[t._v("#")]),t._v(" width 可以是 min-content")]),t._v(" "),i("p",[t._v("width是min-content时，它的宽度由子元素决定。子元素多窄，它就多窄（即子元素会尽可能窄，意思是：子元素若能换行就换行）。没有子元素，那么宽度就是 "),i("code",[t._v("0")]),t._v("。\n如果子元素是固定宽度的，那么此时效果同max-width。\n表格里通常看到某列被挤的一行只有一个字，就与该属性有关系。")]),t._v(" "),i("h2",{attrs:{id:"width-可以是-fit-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-可以是-fit-content"}},[t._v("#")]),t._v(" width 可以是 fit-content")]),t._v(" "),i("p",[t._v("元素尺寸会根据其内容自动扩展或收缩，直到达到该维度上的最佳值。对于水平方向的尺寸，这意味着元素宽度将扩展到其内容所需的最小宽度，但不会超过其包含块的宽度。对于垂直方向的尺寸，这意味着元素高度将扩展到其内容所需的最小高度，但不会超过其包含块的高度。")]),t._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("无脑摘抄一段：\n\n其实fit-content还可以增加个参数，允许是固定长度或百分比，称之为<length-percentage>。那么width是fit-content时，真实width是如下公式算出来的：\n\nmin(max-content, max(min-content, <length-percentage>))\n\n也就是说，如果你设置的宽度是在min-content和max-content之间，那么就用你设置的宽度。否则，就用临界值max-content或min-content。\n\n当然，这个参数不建议你设置，兼容性比较差，直接写width: fit-content即可，它的含义是，子元素有多宽，就多宽。当然结果肯定是小于等于max-content、大于等于min-content的。\n\n但它不会像max-content一样追求尽可能宽，所以它会在需要换行时换行（例如当父元素有宽度限定时，fit-content的子元素会换行，而max-content的子元素会忽略父元素的宽度限制）；也不会像min-content一样，追求尽可能窄，所以它不会无脑换行。\n")])]),t._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[t._v("1")]),i("br"),i("span",{staticClass:"line-number"},[t._v("2")]),i("br"),i("span",{staticClass:"line-number"},[t._v("3")]),i("br"),i("span",{staticClass:"line-number"},[t._v("4")]),i("br"),i("span",{staticClass:"line-number"},[t._v("5")]),i("br"),i("span",{staticClass:"line-number"},[t._v("6")]),i("br"),i("span",{staticClass:"line-number"},[t._v("7")]),i("br"),i("span",{staticClass:"line-number"},[t._v("8")]),i("br"),i("span",{staticClass:"line-number"},[t._v("9")]),i("br"),i("span",{staticClass:"line-number"},[t._v("10")]),i("br"),i("span",{staticClass:"line-number"},[t._v("11")]),i("br")])]),i("h2",{attrs:{id:"width-height-可以是百分比"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#width-height-可以是百分比"}},[t._v("#")]),t._v(" width height 可以是百分比")]),t._v(" "),i("p",[t._v("当 width 和 height 的数值设定为百分比时")]),t._v(" "),i("ul",[i("li",[t._v("元素宽度 = 父元素的宽度 × width")]),t._v(" "),i("li",[t._v("元素高度 = 父元素的高度 × height （父元素高度需为固定数值）")])]),t._v(" "),i("p",[t._v("height：如果父元素是 body ，且没有给 body 和 html 写特殊样式。设置 height 100% 就不行。因为 html 和 body 的 height 默认值都是 auto ，具体高度是由子元素决定的。"),i("code",[t._v("所以如果需要设置高度，还是建议用100vh。")])]),t._v(" "),i("h2",{attrs:{id:"box-sizing-对-width-height-的影响"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing-对-width-height-的影响"}},[t._v("#")]),t._v(" box-sizing 对 width height 的影响")]),t._v(" "),i("p",[i("code",[t._v("box-sizing")]),t._v(" 是用于控制包含了 padding 和 border 内容区的盒子模型计算方式。")]),t._v(" "),i("ul",[i("li",[t._v("box-sizing: content-box; 这是默认值，不包括 padding 和 border。")]),t._v(" "),i("li",[t._v("box-sizing: border-box; 内容 + padding + border。")])]),t._v(" "),i("p",[t._v("例如，我们有一个宽度为 200px、padding 为 20px、border 为 2px 的元素，如果将 box-sizing 属性设置为 border-box，那么这个元素的实际宽度就是 200px，而不是 244px（200 + 20"),i("em",[t._v("2 + 2")]),t._v("2）。")]),t._v(" "),i("h2",{attrs:{id:"当max-width和min-width遇到width"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#当max-width和min-width遇到width"}},[t._v("#")]),t._v(" 当max-width和min-width遇到width")]),t._v(" "),i("p",[t._v("优先级：min-width > max-width > max-width")]),t._v(" "),i("p",[t._v("指的是，当max-width和width发生矛盾时，即width>max-width了，那么会以max-width为准。如果没有发生矛盾，那么就以width为准。height也是同理。")]),t._v(" "),i("p",[t._v("以上~欢迎指正。")])])}),[],!1,null,null,null);i.default=e.exports}}]);