(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{461:function(t,n,s){"use strict";s.r(n);var i=s(2),e=Object(i.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("创建一个新的仓库，有两种方法")]),t._v(" "),n("ol",[n("li",[t._v("github 创建新仓库，之后 git clone 到本地")])]),t._v(" "),n("p",[t._v("这里有一个问题：如果新仓库是空的话，这本地默认是没有 master 分支的，也无法手动创建分支\n必须有过一次提交后，比如本地提交一个 README.md，就会自动创建 master 分支，")]),t._v(" "),n("p",[t._v("也就是说如果按照 clone 这种方式，那么创建 github 仓库的时候最好把自动生成 README.md 文件这个选项给勾选上")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("github 创建新仓库，之后 把一个现有的本地仓库 推送到这个新仓库里面去")])]),t._v(" "),n("p",[t._v("注意：这里在 github 新建仓库时不要勾选生成 README.md 的选项\n因为如果远程仓库里面有 README.md，本地仓库没有，那就不一致了，推送不过去了，并且拉取还拉不了\n不过 git push -u origin master -f 用强制推送 可以推送过去，但会把远程仓库里面的已有内容全部清空！")]),t._v(" "),n("p",[t._v("不要用 一个已有内容的本地仓库 推送到 一个已有其他内容的远程仓库。")])])}),[],!1,null,null,null);n.default=e.exports}}]);